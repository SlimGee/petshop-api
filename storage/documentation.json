{
  "swagger": "2.0",
  "host": "petshop-api.test",
  "basePath": "/",
  "schemes": [],
  "tags": [
    {
      "name": "User",
      "description": "The User Endpoint"
    },
    {
      "name": "Brand",
      "description": "The Brand Endpoint"
    },
    {
      "name": "Category",
      "description": "The Category Endpoint"
    },
    {
      "name": "Main",
      "description": "The Main Endpoint"
    },
    {
      "name": "Order",
      "description": "The Orders Endpoint"
    },
    {
      "name": "Order Status",
      "description": "The Order Status Endpoint"
    },
    {
      "name": "Payment",
      "description": "The Payment Endpoint"
    },
    {
      "name": "Product",
      "description": "The Product Endpoint"
    }
  ],
  "paths": {
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiv1userloginObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          },
          "422": {
            "description": "Unprocessable Content"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Login to user account"
      }
    },
    "/api/v1/user/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Logout from user account"
      }
    },
    "/api/v1/user/forgot-password": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiv1userforgotPasswordObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "This endpoint resets a user password. The user will receive an email with a link to reset password. Your frontend MUST have a route /password-reset/{token} that takes the token from the route param and user email from the query string",
        "deprecated": false,
        "summary": "Request a password reset token"
      }
    },
    "/api/v1/user/reset-password-token": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiv1userresetPasswordTokenObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Reset user password with a token"
      }
    },
    "/api/v1/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create user account"
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "View user account"
      },
      "delete": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Delete user account"
      },
      "put": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update user account"
      }
    },
    "/api/v1/user/orders": {
      "get": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Orders for user"
      }
    },
    "/api/v1/brands": {
      "get": {
        "tags": [
          "Brand"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all brands"
      }
    },
    "/api/v1/brand/create": {
      "post": {
        "tags": [
          "Brand"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create new brand"
      }
    },
    "/api/v1/brand/{uuid}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single brand"
      },
      "patch": {
        "tags": [
          "Brand"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update the brand"
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete brand"
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all categories"
      }
    },
    "/api/v1/category/create": {
      "post": {
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create new category"
      }
    },
    "/api/v1/category/{uuid}": {
      "get": {
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single category"
      },
      "put": {
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update category"
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete category"
      }
    },
    "/api/v1/main/blog": {
      "get": {
        "tags": [
          "Main"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List blog posts"
      }
    },
    "/api/v1/main/blog/{uuid}": {
      "get": {
        "tags": [
          "Main"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single blog post"
      }
    },
    "/api/v1/main/promotions": {
      "get": {
        "tags": [
          "Main"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List promotions"
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all orders"
      }
    },
    "/api/v1/order/{uuid}": {
      "get": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single order"
      },
      "put": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update single order"
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete order"
      }
    },
    "/api/v1/orders/create": {
      "post": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create new order"
      }
    },
    "/api/v1/orders/shipment-locator": {
      "get": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all shipped orders"
      }
    },
    "/api/v1/orders/dashboard": {
      "get": {
        "tags": [
          "Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all orders for the dashboard"
      }
    },
    "/api/v1/order-statuses": {
      "get": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": ""
      }
    },
    "/api/v1/order-statuses/create": {
      "post": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create new order status"
      }
    },
    "/api/v1/order-status/{uuid}": {
      "get": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single order status"
      },
      "put": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update order status"
      },
      "delete": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete order status"
      }
    },
    "/api/v1/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "List all payment records"
      }
    },
    "/api/v1/payments/create": {
      "post": {
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Create new payment"
      }
    },
    "/api/v1/payment/{uuid}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single payment"
      },
      "patch": {
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update payment"
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete payment"
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": ""
      }
    },
    "/api/v1/products/create": {
      "post": {
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [],
        "description": "Create new product",
        "deprecated": false,
        "summary": "Create new product"
      }
    },
    "/api/v1/product/{uuid}": {
      "get": {
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [],
        "description": "",
        "summary": "Show single product"
      },
      "put": {
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully done"
          }
        },
        "security": [],
        "description": "",
        "deprecated": false,
        "summary": "Update product"
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [],
        "description": "",
        "summary": "Delete product"
      }
    }
  },
  "definitions": {
    "apiv1userloginObject": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "okon.icie@example.net"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "apiv1userforgotPasswordObject": {
      "type": "object",
      "properties": [],
      "example": {
        "email": "peggie62@example.org"
      }
    },
    "postApiv1userforgotPassword200ResponseObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "apiv1userresetPasswordTokenObject": {
      "type": "object",
      "properties": [],
      "example": {
        "token": "0be75dbdad60ac7a20db4d9264dc3e51033250becda0187af67423d1c5e93d6e",
        "email": "peggie62@example.org",
        "password": "password",
        "password_confirmation": "password"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Given"
        },
        "last_name": {
          "type": "string",
          "example": "Ncube"
        },
        "email": {
          "type": "string",
          "example": "email@example.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "password_confirmation": {
          "type": "string",
          "example": "password"
        },
        "address": {
          "type": "string",
          "description": "max:255"
        },
        "avatar": {
          "type": "string",
          "description": "sometimes, nullable, uuid"
        },
        "phone_number": {
          "type": "string",
          "description": "phone:LENIENT"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "password",
        "address",
        "phone_number"
      ]
    },
    "Brand": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "nike"
        }
      },
      "required": [
        "title"
      ],
      "example": {
        "title": "sunt"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Home and Kitchen"
        }
      },
      "required": [
        "title"
      ],
      "example": {
        "title": "Nihil necessitatibus et beatae occaecati quas sequi id quo."
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "integer"
        },
        "products": {
          "type": "object",
          "description": ""
        },
        "products.*.product": {
          "type": "string",
          "description": "Product uuid"
        },
        "products.*.quantity": {
          "type": "integer",
          "description": "The quantity"
        },
        "address": {
          "type": "object",
          "description": ""
        },
        "address.billing": {
          "type": "string",
          "description": ""
        },
        "address.shipping": {
          "type": "string",
          "description": "Shipping address"
        }
      },
      "required": [
        "payment_id",
        "products",
        "products.*.product",
        "products.*.quantity",
        "address",
        "address.billing"
      ],
      "example": {
        "products": [
          {
            "product": "9c71df67-150f-41cd-ac7d-22222768e191",
            "quantity": 4
          },
          {
            "product": "9c71df67-157a-4a86-bec2-86738e0ccc6d",
            "quantity": 9
          },
          {
            "product": "9c71df67-15de-48b9-ba1e-6d5713e87ec0",
            "quantity": 4
          },
          {
            "product": "9c71df67-1644-43eb-bb73-4175e2b3a541",
            "quantity": 9
          },
          {
            "product": "9c71df67-16ab-48ae-9220-c0631245adbd",
            "quantity": 7
          }
        ],
        "address": {
          "billing": "7518 Rolfson Junction\nNew Aletha, NH 92944",
          "shipping": "8106 Crooks Bridge Suite 498\nEast Baileyland, SC 12177"
        },
        "amount": 377.97,
        "payment_id": 1,
        "user_id": 1,
        "order_status_id": 1
      }
    },
    "OrderStatus": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "example": {
        "title": "molestias"
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "credit_card,cash_on_delivery,bank_transfer"
        },
        "details": {
          "type": "object",
          "description": ""
        },
        "details.swift": {
          "type": "string"
        },
        "details.iban": {
          "type": "string"
        },
        "details.name": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "details"
      ],
      "example": {
        "type": "cash_on_delivery",
        "details": {
          "first_name": "Annetta",
          "last_name": "Schmeler",
          "address": "654 Braun Junctions\nStrackebury, IA 44616"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "category_uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "price": {
          "type": "double"
        },
        "description": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      },
      "required": [
        "category_uuid",
        "title",
        "price",
        "description"
      ],
      "example": {
        "title": "Voluptas reprehenderit et labore aspernatur.",
        "category_uuid": "9c71df67-a99d-447c-b35e-ce8731beb198",
        "price": 896.58,
        "description": "Iure aliquid culpa error omnis repellendus ullam et. Quo aliquid dolorem omnis eius option ipsum. Minus option illo natus consectetur est ut. Omnis architecto mollitia tenetur minus velit.",
        "metadata": {
          "brand": "9c71df67-a9d0-458e-81fb-eca1aae1575e",
          "image": "d1674398-96de-3675-8782-a835f356563b"
        }
      }
    }
  },
  "info": {
    "description": "The pet shop api",
    "version": "0.0.1",
    "title": "Laravel",
    "termsOfService": "",
    "contact": {
      "email": "given@flixtechs.co.zw"
    }
  }
}
